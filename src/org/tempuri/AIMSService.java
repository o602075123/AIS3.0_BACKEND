package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2017-11-09T13:47:51.306+08:00
 * Generated source version: 3.1.4
 * 
 */
@WebServiceClient(name = "AIMSService", 
                  wsdlLocation = "http://192.168.1.95:8088/AIMSService.asmx?wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class AIMSService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "AIMSService");
    public final static QName AIMSServiceSoap12 = new QName("http://tempuri.org/", "AIMSServiceSoap12");
    public final static QName AIMSServiceSoap = new QName("http://tempuri.org/", "AIMSServiceSoap");
    public final static QName AIMSServiceHttpGet = new QName("http://tempuri.org/", "AIMSServiceHttpGet");
    public final static QName AIMSServiceHttpPost = new QName("http://tempuri.org/", "AIMSServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://192.168.1.95:8088/AIMSService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AIMSService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://192.168.1.95:8088/AIMSService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AIMSService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AIMSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AIMSService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public AIMSService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AIMSService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AIMSService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns AIMSServiceSoap
     */
    @WebEndpoint(name = "AIMSServiceSoap12")
    public AIMSServiceSoap getAIMSServiceSoap12() {
        return super.getPort(AIMSServiceSoap12, AIMSServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AIMSServiceSoap
     */
    @WebEndpoint(name = "AIMSServiceSoap12")
    public AIMSServiceSoap getAIMSServiceSoap12(WebServiceFeature... features) {
        return super.getPort(AIMSServiceSoap12, AIMSServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns AIMSServiceSoap
     */
    @WebEndpoint(name = "AIMSServiceSoap")
    public AIMSServiceSoap getAIMSServiceSoap() {
        return super.getPort(AIMSServiceSoap, AIMSServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AIMSServiceSoap
     */
    @WebEndpoint(name = "AIMSServiceSoap")
    public AIMSServiceSoap getAIMSServiceSoap(WebServiceFeature... features) {
        return super.getPort(AIMSServiceSoap, AIMSServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns AIMSServiceHttpGet
     */
    @WebEndpoint(name = "AIMSServiceHttpGet")
    public AIMSServiceHttpGet getAIMSServiceHttpGet() {
        return super.getPort(AIMSServiceHttpGet, AIMSServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AIMSServiceHttpGet
     */
    @WebEndpoint(name = "AIMSServiceHttpGet")
    public AIMSServiceHttpGet getAIMSServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(AIMSServiceHttpGet, AIMSServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns AIMSServiceHttpPost
     */
    @WebEndpoint(name = "AIMSServiceHttpPost")
    public AIMSServiceHttpPost getAIMSServiceHttpPost() {
        return super.getPort(AIMSServiceHttpPost, AIMSServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AIMSServiceHttpPost
     */
    @WebEndpoint(name = "AIMSServiceHttpPost")
    public AIMSServiceHttpPost getAIMSServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(AIMSServiceHttpPost, AIMSServiceHttpPost.class, features);
    }

}
